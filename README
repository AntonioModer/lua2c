lua2c - converts Lua 5.1 source code to C code.

== Description ==

This utility converts a given Lua source file into an equivalent C
source file containing Lua C API calls.  At least, this is true for a
large subset of the Lua language (see limitations below).

The compiler is written entirely in Lua.  This project reuses
Metalua's gg/mlp parser to convert Lua source to a Metalua-style[1]
AST over which the compiler then operates.  gg/mlp is bundled in the
distribution (patched metalua-0.4.1-rc1) and is written in pure Lua,
so no build/install is needed.  lua2c does not require Metalua itself.

== Usage ==

Example usage:

  lua lua2c.lua test/bisect.lua

which generates a C file to standard output.

You may also use the shell script "clua" to compile Lua->C->machine
code and execute all in one step.  However, you may need to edit the
variables in the file to match your system.  This utility invokes the
C compiler.

  ./clua test/bisect.lua

lua2c can even compile itself!  (Note: the -c option compiles only
without running.)

  ./clua -c lua2c.lua               # compile lua2c binary

  ./lua2c examples-lua/bisect.lua   # test

== Related Work ==

  * luac2c - This related effort Hisham Muhammad[2] converts Lua
    bytecodes to C source, whereas this project converts Lua
    source to C source.  luac2c runs into a few similar
    limitations as given above.  luac2c has remained experimental.
    It superseded Luiz Henrique De Figueiredo's very basic but
    similarly named lua2c for Lua 4.0.[3]

  * luagen++[4] uses C++ expression templates to translate
    Lua-like C++ statements to C API calls.  The code generation
    structure is actually fairly similar to lua2c.

  * Python Pyrex[5] does something similar in Python but has the
    added goal of lowering the boundary between C and Python
    code.  Something like that could be done with lua2c,
    especially since lua2c uses the extensible gg parser.

  * Clue by David Given[6] does the opposite: convert C source
    to Lua source.

== Potential Uses ==

I think this project not only is nice theoretically to have but
has a number of potential uses:

  * Provide another approach of compiling Lua to machine code
    (rather than luac + bin2c)

  * Streamline the interface between C and Lua code and allow
    efficient access to C datatypes from Lua (see Pyrex above)

  * Compile Lua to optimized C.  For example, by statically
    determining that certain variables are used in a restricted
    way (e.g. by decorating the Lua source file with pragmas or
    determining this implicitly by inference), certain code
    constructs might be simplified to use plain C rather that
    the Lua C API.  This could allow certain Lua code written
    with sufficient care to run at native speeds.

== Limitations / Status ==

lua2c does not currently support coroutines, tail call optimizations,
and functions that normally reject C functions (e.g. setfenv).
These don't have the exact analogue in C.  Coroutines might not ever
be supported. However, some solutions might be explored (Coco or
simulating coroutines in C with a lot of ugly code).

Closures and upvalues are implemented, but creating and accessing
upvalues is somewhat slow.

WARNING: This code passes much of the Lua 5.1 test suite[7] and can
compile itself, but the code is new and there can still be errors.
In particular, a few language features (e.g. coroutines) are not
implemented.  See comments in lua2c.lua for details.  Please report
bugs/patches on the wiki.

Once the code is more complete/robust, more attention can be given to
optimizing the code generation.

== Project Page ==

The project page is currently http://lua-users.org/wiki/LuaToCee .

== Licensing ==

(c) 2008 David Manura.  Licensed under the same terms as Lua (MIT
license).  See included LICENSE file for full licensing details.

== References ==

  * [1] Metalua AST - http://metalua.luaforge.net/manual006.html#toc17
  * [2] luac2c (previously named luatoc) - LuaList:2006-07/msg00144.html
  * [3] LHF's lua2c for Lua 4.0 - LuaList:2002-01/msg00296.html
  * [4] luagen++ - LuaGenPlusPlus
  * [5] Pyrex - http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/
  * [6] Clue - http://cluecc.sourceforge.net/
  * [7] Lua 5.1 test suite -
        http://www.inf.puc-rio.br/~roberto/lua/lua5.1-tests.tar.gz
